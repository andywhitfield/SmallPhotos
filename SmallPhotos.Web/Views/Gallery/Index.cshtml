@model SmallPhotos.Web.Model.Gallery.IndexViewModel

@section Scripts {
<script type="text/javascript">
    $(function() {
        $(window).on('resize', fullSizeImage);
        fullSizeImage();

        $('span[data-photoid]').each(function() {
            let star = $(this);

            star.click(function() {
                let photoId = star.attr('data-photoid');
                let isStarred = @(Model.Photo.IsStarred ? "true" : "false");
                let uri = '/api/photoapi/' + (isStarred ? 'unstar' : 'star') + '/' + photoId;
                $.post(uri, {}, function() {
                    window.location.reload();
                });
            });
        });

        closeAddTag();
        $('input[name="tag"]').keyup(function(e) {
            if (e.key === "Escape") {
                closeAddTag();
            } else if (e.key === "Enter") {
                addTag();
            }
        });
        $('#photo-tag-cancel').click(function() {
            closeAddTag();
        });
        $('#photo-tag-add').click(function() {
            let tagInput = $('input[name="tag"]');
            if (tagInput.is(':visible')) {
                addTag();
            } else {
                tagInput.show().focus();
                $('#photo-tag-cancel').show();
                $('#photo-tag-clearall').hide();
            }
        });
        $('#photo-tag-clearall').click(function() {
            if (!confirm('Are you sure you want to delete all the tags for this photo?'))
                return;
            let inputTag = $('input[name="tag"]');
            let photoId = inputTag.attr('data-photoid');
            let uri = '/api/photoapi/tag/' + photoId;
            console.log('clearing all tags on photo ' + photoId);
            $.ajax({url:uri, type:'DELETE', contentType:'application/json; charset=utf-8', dataType:'json'}).always(function() {
                window.location.reload();
            });
        });
        $('#load-from-dropbox').click(loadFromDropbox);
        $('#fullimg').dblclick(loadFromDropbox);
    });

    function addTag() {
        let inputTag = $('input[name="tag"]');
        let photoId = inputTag.attr('data-photoid');
        let tag = inputTag.val();
        if (tag === '')
            return;

        let uri = '/api/photoapi/tag/' + photoId;
        console.log('adding tag to photo ' + photoId + ': ' + tag);
        $.ajax({url:uri, type:'POST', data: JSON.stringify({tag:tag}), contentType:'application/json; charset=utf-8', dataType:'json'}).always(function() {
            closeAddTag();
            window.location.reload();
        });
    }

    function closeAddTag() {
        $('input[name="tag"]').hide();
        $('input[name="tag"]').val('');
        $('#photo-tag-cancel').hide();
        $('#photo-tag-clearall').show();
    }

    function loadFromDropbox() {
        $('#load-from-dropbox').hide();
        $('#fullimg').attr('src', '/photo/original/@(Model.Photo.PhotoId)/@(Model.Photo.Filename)');
    }
</script>
}

@await Component.InvokeAsync("Navigation")

<article>
    <div>
        @if (Model.Photo.IsStarred) {
        <span data-photoid="@Model.Photo.PhotoId" title="Click to unstar this photo" class="star-on"><img src="/images/star.png" width="15" height="15" alt="star" loading="lazy" /></span>
        } else {
        <span data-photoid="@Model.Photo.PhotoId" title="Click to star this photo" class="star-off"><img src="/images/star.png" width="15" height="15" alt="star" loading="lazy" /></span>
        }
        Taken: @Model.Photo.DateTaken
    </div>

    <div class="pagination">
        <a title="Back to photo thumbnails" href="@(Model.FromPagePath)?photoId=@(Model.Photo.PhotoId)#@(Model.Photo.PhotoId).@(Model.Photo.Filename)">&lsaquo;<span class="pagination-info"> Thumbnails</span></a>
        @if (Model.PreviousPhoto != null) {
        <a title="Previous photo" href="/gallery/@(Model.PreviousPhoto.PhotoId)/@(Model.PreviousPhoto.Filename)@(Model.FromPageQueryString)">&laquo;<span class="pagination-info"> Prev</span> (#@(Model.PreviousPhotoNumber) of @(Model.PhotoCount))</a>
        }
        @if (Model.NextPhoto != null) {
        <a title="Next photo" href="/gallery/@(Model.NextPhoto.PhotoId)/@(Model.NextPhoto.Filename)@(Model.FromPageQueryString)"><span class="pagination-info">Next </span>(#@(Model.NextPhotoNumber) of @(Model.PhotoCount)) &raquo;</a>
        }
    </div>

    <p>
        <img id="fullimg" src="/photo/@(Model.Photo.PhotoId)/@(Model.Photo.Filename)" />
        @if (Model.Photo.IsDropboxSource) {
        <br/>
        <a name="load-from-dropbox" id="load-from-dropbox" title="Load full-size image from Dropbox" class="photo-load-dropbox">&darr; Dropbox</a>
        }
    </p>

    <div>
        <input type="checkbox" id="fullimg-scaled" name="fullimg-scaled" checked onchange="fullSizeImage()" /><label for="fullimg-scaled"> scale to window</label>
        &nbsp;&nbsp;&nbsp;&nbsp;
        @if (Model.Photo.Tags.Any()) {
            @foreach (var tag in Model.Photo.Tags) {
            <a title="Tag: @tag" href="/tagged/@tag" class="photo-tag">@tag</a>
            }
            <text>
            &nbsp;&nbsp;
            </text>
        }
        <span style="white-space: nowrap;">
            <input type="text" name="tag" data-photoid="@Model.Photo.PhotoId" />
            <a title="Add a new tag" name="photo-tag-add" class="photo-tag" id="photo-tag-add">+</a>
            <a title="Cancel add tag" name="photo-tag-cancel" class="photo-tag" id="photo-tag-cancel">x</a>
            @if (Model.Photo.Tags.Any()) {
            <a data-tags="true" title="Clear all tags" name="photo-tag-clearall" class="photo-tag" id="photo-tag-clearall">x</a>
            }
        </span>
    </div>

    <div class="pagination">
        <a title="Back to photo thumbnails" href="@(Model.FromPagePath)?photoId=@(Model.Photo.PhotoId)#@(Model.Photo.PhotoId).@(Model.Photo.Filename)">&lsaquo;<span class="pagination-info"> Thumbnails</span></a>
        @if (Model.PreviousPhoto != null) {
        <a title="Previous photo" href="/gallery/@(Model.PreviousPhoto.PhotoId)/@(Model.PreviousPhoto.Filename)@(Model.FromPageQueryString)">&laquo;<span class="pagination-info"> Prev</span> (#@(Model.PreviousPhotoNumber) of @(Model.PhotoCount))</a>
        }
        @if (Model.NextPhoto != null) {
        <a title="Next photo" href="/gallery/@(Model.NextPhoto.PhotoId)/@(Model.NextPhoto.Filename)@(Model.FromPageQueryString)"><span class="pagination-info">Next </span>(#@(Model.NextPhotoNumber) of @(Model.PhotoCount)) &raquo;</a>
        }
    </div>

    <details>
        <summary>Image details</summary>
        <div>Source: @Model.Photo.Source</div>
        <div>File: @Model.Photo.Filename</div>
        <div>Size: @Model.Photo.SizeInfo</div>
        <div>Taken: @Model.Photo.DateTaken</div>
        <div>File time: @Model.Photo.FileCreationDate</div>
        <div>Starred: @(Model.Photo.IsStarred ? "yes" : "no")</div>
        <div>Tags: @(string.Join(", ", Model.Photo.Tags))</div>
    </details>

</article>